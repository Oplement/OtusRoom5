// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shop.Microservice.Infrastructure;

#nullable disable

namespace Shop.Microservice.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240110174447_INIT")]
    partial class INIT
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<double>("AmountForSend")
                        .HasColumnType("double precision");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("abf270ef-cbe0-46c0-99a7-88c27afbba7c"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("9cfc38b6-1d6f-4084-b2ce-bc7bf42773ee"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("c8771de7-edb5-4dd5-875a-08ad162cde6f"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("81131536-68ff-4624-a1ba-dc3d93fb69a0"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("ac9e9779-82de-42a7-8556-01a1fd2705b2"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("ab7ddbcb-3e0e-4979-b685-835038b6c7bc"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("869a2674-1dbf-41e6-b964-00d9f3e7c903"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("2abe378b-1952-48a5-afad-ff055ac05cc4"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("8e3a0892-9d18-4ca7-be8b-f7485de149ae"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("e1628599-5a4c-4768-b8b0-bc10c9421ede"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SenderID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TransactionStatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.OrderProduct", b =>
                {
                    b.HasOne("Shop.Microservice.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Microservice.Domain.Common.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
