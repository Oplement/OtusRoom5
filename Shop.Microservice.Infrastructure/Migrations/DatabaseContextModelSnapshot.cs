// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shop.Microservice.Infrastructure;

#nullable disable

namespace Shop.Microservice.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<double>("AmountForSend")
                        .HasColumnType("double precision");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Balances");

                    b.HasData(
                        new
                        {
                            Id = new Guid("487f7e43-9fbb-42c8-b8e7-a56ccf572bcc"),
                            Amount = 10000.0,
                            AmountForSend = 100.0,
                            UserId = new Guid("a2a7dcb7-49fd-4ab9-bd00-b05d31a12d3e")
                        },
                        new
                        {
                            Id = new Guid("bcd0b45e-569e-4ade-a45e-2286db67dfbd"),
                            Amount = 20000.0,
                            AmountForSend = 200.0,
                            UserId = new Guid("a2a7dcb7-49fd-4ab9-bd00-b05d31a19d3e")
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ff2c5a6-f9a9-40fa-ae10-525ddb3abb7b"),
                            Count = 15,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("81563215-874f-4da2-b171-30da3713d8af"),
                            Count = 75,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("9bcfc253-0654-4d95-a5b9-e58a9cb9345b"),
                            Count = 34,
                            Description = "Отличный подарок",
                            Image = "https://praktika-reklama.ru/images/stories/virtuemart/product/3146.40_1_tif_1000x1000.jpg",
                            Price = 1999,
                            Title = "Термокружка"
                        },
                        new
                        {
                            Id = new Guid("89c77a2b-52a9-4c53-8757-39802504062f"),
                            Count = 75,
                            Description = "Флешка на 64 гб",
                            Image = "https://chel.sp-computer.ru/upload/iblock/dd0/dd0d7bdff13a3c31afd2f39080d7f0a2.jpg",
                            Price = 799,
                            Title = "Флешка 64gb"
                        },
                        new
                        {
                            Id = new Guid("99fbb82c-554c-48e6-9f62-ee189c5e874f"),
                            Count = 12,
                            Description = "Овечья шерсть",
                            Image = "https://paters.ru/files/catalog/o_3545.jpg",
                            Price = 5999,
                            Title = "Плед красный"
                        },
                        new
                        {
                            Id = new Guid("3159a88c-d0fa-4ff0-b9c6-b03abac79c33"),
                            Count = 34,
                            Description = "Хороший рюкзак",
                            Image = "https://illan-gifts.ru/api/images/riukzak-molti-base-seryj-818385.jpeg",
                            Price = 2399,
                            Title = "Рюкзак"
                        },
                        new
                        {
                            Id = new Guid("a46b9246-7e14-4709-9d15-0e8d3534f130"),
                            Count = 52,
                            Description = "Зимние перчатки",
                            Image = "https://a.allegroimg.com/original/115466/f37055214459bfdcb1252f470363/Rekawice-meskie-polarowe-zimowe-rekawiczki-L-XL",
                            Price = 1199,
                            Title = "Перчатки"
                        },
                        new
                        {
                            Id = new Guid("d1435cfd-b383-4924-8e28-ab3131894a38"),
                            Count = 21,
                            Description = "Размеры S,M,L",
                            Image = "https://cdn1.ozone.ru/s3/multimedia-g/6049217164.jpg",
                            Price = 599,
                            Title = "Носки"
                        },
                        new
                        {
                            Id = new Guid("0562856a-47de-4597-870b-0f1a6b213ee6"),
                            Count = 55,
                            Description = "10000мАч",
                            Image = "https://galagraffity.ru/image/cache/catalog/XML341ae4b41effce6e99b3170a951e6dc7/futbolki/IMGec5d5e1c4a114ecba74c0557231a0d43-767x767.jpg",
                            Price = 899,
                            Title = "Футболка"
                        },
                        new
                        {
                            Id = new Guid("ae16ea54-6493-4360-b4bb-86ab94b7431c"),
                            Count = 55,
                            Description = "Шарф",
                            Image = "https://bis-souvenir.ru/wp-content/uploads/2021/01/6901992-th-img.jpg",
                            Price = 799,
                            Title = "Шарф"
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReceiverID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f18e8fa6-1bb2-46c5-8e79-c8264603633c"),
                            CreateAt = new DateTime(2024, 1, 31, 16, 7, 15, 69, DateTimeKind.Utc).AddTicks(7471),
                            OrderStatus = 0,
                            UserId = new Guid("a2a7dcb7-49fd-4ab9-bd00-b05d31a12d3e")
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f31503f2-e602-4a5f-826e-ce128357ed1a"),
                            Count = 1,
                            OrderId = new Guid("f18e8fa6-1bb2-46c5-8e79-c8264603633c"),
                            ProductId = new Guid("4ff2c5a6-f9a9-40fa-ae10-525ddb3abb7b")
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.OrderProduct", b =>
                {
                    b.HasOne("Shop.Microservice.Domain.Entities.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Microservice.Domain.Common.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
