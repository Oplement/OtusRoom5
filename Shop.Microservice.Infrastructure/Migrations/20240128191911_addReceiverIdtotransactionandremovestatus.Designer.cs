// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shop.Microservice.Infrastructure;

#nullable disable

namespace Shop.Microservice.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240128191911_addReceiverIdtotransactionandremovestatus")]
    partial class addReceiverIdtotransactionandremovestatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<double>("AmountForSend")
                        .HasColumnType("double precision");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37947963-eedf-4d80-999e-7698c7f2b399"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("ae12c72c-dae1-40eb-b7b1-adebb8a56ecd"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("ccc3ff8b-f4a0-41d2-84ec-93035580b602"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("e870e54c-8ac9-4219-9e44-8dc867640e06"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("134e0b76-e7fa-4270-9e04-4b1ef0f457e2"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("50723628-8ee8-4be4-b9e3-f886583b24d4"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("ad4a157e-704d-4373-886f-a3f1de02339f"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("3479e045-1bf4-4ffb-9c89-31089731a7f9"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("54500673-7747-4aec-a399-d956b6d6a2c8"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("57e37102-d86e-454b-adde-ab7b9c04735f"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReceiverID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4486afc4-e675-4797-924d-c63ac228c5d3"),
                            CreateAt = new DateTime(2024, 1, 28, 19, 19, 11, 37, DateTimeKind.Utc).AddTicks(3413),
                            OrderStatus = 0,
                            UserId = new Guid("a2a7dcb7-49fd-4ab9-bd00-b05d31a12d3e")
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca1a589c-c910-4b05-a0c7-d9d3b0133d7d"),
                            Count = 1,
                            OrderId = new Guid("4486afc4-e675-4797-924d-c63ac228c5d3"),
                            ProductId = new Guid("37947963-eedf-4d80-999e-7698c7f2b399")
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.OrderProduct", b =>
                {
                    b.HasOne("Shop.Microservice.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Microservice.Domain.Common.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
