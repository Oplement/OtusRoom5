// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shop.Microservice.Infrastructure;

#nullable disable

namespace Shop.Microservice.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240129143244_AddBalancesForTestUsers")]
    partial class AddBalancesForTestUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<double>("AmountForSend")
                        .HasColumnType("double precision");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Balances");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97fd21fb-ebbc-4f7e-96e1-7a3f5545a19e"),
                            Amount = 10.0,
                            AmountForSend = 100.0,
                            UserId = new Guid("a2a7dcb7-49fd-4ab9-bd00-b05d31a12d3e")
                        },
                        new
                        {
                            Id = new Guid("40e3e3f5-be39-4db9-827b-c42c4a0ea0f4"),
                            Amount = 20.0,
                            AmountForSend = 200.0,
                            UserId = new Guid("a2a7dcb7-49fd-4ab9-bd00-b05d31a19d3e")
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a8a3ff6-6ee2-4fd8-a3e9-c9eaa1011937"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("12cc0a90-2e23-46f0-bf89-3392331ad1fd"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("4d66d925-31eb-4ec8-8c63-14fa4a52e89d"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("d7d33e05-d220-4eef-b7f1-8e53c16f8347"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("989f7bcd-9459-4955-9076-2f34cb7185d6"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("6b3959f9-ad81-45ed-be1d-805568344a2a"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("640e3e8a-db87-4fa4-a245-0e9cb5d82ec4"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("e06b6537-d4a7-46d4-a1b3-c067f5929d0c"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        },
                        new
                        {
                            Id = new Guid("c507c9d4-be90-450c-ba6a-1c76674b8f5e"),
                            Count = 2,
                            Description = "Размеры S,M,L",
                            Image = "https://printing-t-shirts.podaru.ru/assets/images/products/760/wu6200043tif1000x1000.jpg",
                            Price = 5999,
                            Title = "Худи"
                        },
                        new
                        {
                            Id = new Guid("fa72d29a-3e6c-46e1-bcfd-7b6066d2fc0a"),
                            Count = 5,
                            Description = "10000мАч",
                            Image = "https://sc04.alicdn.com/kf/HTB1TxHrfgoQMeJjy1Xaq6ASsFXay.jpg",
                            Price = 2399,
                            Title = "ПоверБанк"
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Common.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReceiverID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("662a4810-254c-4574-acbe-8b3bc12cf1cb"),
                            CreateAt = new DateTime(2024, 1, 29, 14, 32, 43, 812, DateTimeKind.Utc).AddTicks(3017),
                            OrderStatus = 0,
                            UserId = new Guid("a2a7dcb7-49fd-4ab9-bd00-b05d31a12d3e")
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c12bbbba-6504-4d36-b12e-e0f1fa397d13"),
                            Count = 1,
                            OrderId = new Guid("662a4810-254c-4574-acbe-8b3bc12cf1cb"),
                            ProductId = new Guid("2a8a3ff6-6ee2-4fd8-a3e9-c9eaa1011937")
                        });
                });

            modelBuilder.Entity("Shop.Microservice.Domain.Entities.OrderProduct", b =>
                {
                    b.HasOne("Shop.Microservice.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Microservice.Domain.Common.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
